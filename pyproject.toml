[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "atlas"
version = "0.1.0"
description = "AI-powered Proxmox VM provisioning system"
authors = [
    {name = "ATLAS Development Team", email = "atlas@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "autogen-agentchat>=0.2.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "proxmoxer>=1.3.0",
    "jinja2>=3.1.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "colorlog>=6.7.0",
    "python-dotenv>=1.0.0",
    "cryptography>=41.0.0",
    "jsonschema>=4.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "pylint>=2.17.0",
    "mypy>=1.4.0",
    "bandit>=1.7.0",
    "pre-commit>=3.3.0",
]

vault = [
    "hvac>=1.1.0",
]

terraform = [
    "python-terraform>=0.10.1",
]

ansible = [
    "ansible>=8.0.0",
    "ansible-runner>=2.3.0",
]

[project.scripts]
atlas = "atlas.cli:main"

[project.urls]
Homepage = "https://github.com/ssignori76/ATLAS"
Repository = "https://github.com/ssignori76/ATLAS"
Issues = "https://github.com/ssignori76/ATLAS/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["atlas*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
disable = ["C0330", "C0326"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=atlas --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests"
]
